/**
 * Note Store
 *
 * The base code for this store was generated by
 * ChatAI at https://chat.openai.com/chat, with the
 * question "use dexie.js in a svelte store".
 */
import { writable } from "svelte/store";
import { browser } from "$app/environment";
import db from "../data/db.js";

import { convertDateString } from "../library/calendar.js";

const createNoteStore = () => {
  const { subscribe, set, update } = writable([]);

  // Load notes from database on store creation
  if (browser) {
    db.notes.toArray().then((notes) => {
      set(notes);
    });
  }

  return {
    subscribe,
    addNote: async (data) => {
      const { title, text, categoryId } = data;
      const note = {
        title,
        text,
        categoryId,
        archived: false,
        createdAt: convertDateString(new Date().toLocaleDateString()),
        updatedAt: convertDateString(new Date().toLocaleDateString()),
      };
      const id = await db.notes.add(note);
      update((notes) => [...notes, { id, ...note }]);
    },
    editNote: async (id, data) => {
      const updateTime = convertDateString(new Date().toLocaleDateString());
      const { title, text, categoryId, archived } = data;
      const note = {
        title,
        text,
        categoryId,
        archived,
        updatedAt: updateTime,
      };
      const updated = await db.notes.update(id, note);
      if (updated) {
        update((notes) => {
          return notes.map((note) => {
            if (note.id === id) {
              return {
                ...note,
                title,
                text,
                categoryId,
                archived,
                updatedAt: updateTime,
              };
            }
            return note;
          });
        });
      }
    },
    deleteNote: async (id) => {
      await db.notes.delete(id);
      update((notes) => notes.filter((note) => note.id !== id));
    },
  };
};

export const notes = createNoteStore();
